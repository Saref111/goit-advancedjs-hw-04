{"version":3,"file":"commonHelpers.js","sources":["../src/js/api.js","../src/js/ui.js","../src/main.js"],"sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '40884603-5ad171707053fe9611639638b';\n\nexport const fetchImages = ({\n  searchQuery = '',\n  currentPage = 1,\n  pageSize = 40,\n}) => {\n  return fetch(\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=${pageSize}&key=${API_KEY}&safeSearch=true`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`No response from server on request ${searchQuery}`)\n    );\n  });\n};\n","const renderImagesListItem = (item) => {\n    return `\n          <li class=\"gallery__item\">\n              <a href=\"${item.largeImageURL}\">\n                  <img \n                      src=\"${item.webformatURL}\" \n                      alt=\"${item.tags}\" \n                      class=\"gallery__image\" \n                      loading=\"lazy\"    \n                  />\n              </a>\n              <div class=\"info\">\n                  <p class=\"info__item\">\n                      <b>Likes</b> ${item.likes}\n                  </p>\n                  <p class=\"info__item\">\n                      <b>Views</b> ${item.views}\n                  </p>\n                  <p class=\"info__item\">\n                      <b>Comments</b> ${item.comments}\n                  </p>\n                  <p class=\"info__item\">\n                      <b>Downloads</b> ${item.downloads}\n                  </p> \n              </div>\n          </li>\n      `;\n  }\n\nexport const renderImagesList = list => {\n  const imagesList = document.querySelector('.gallery');\n\n  imagesList.innerHTML = '';\n\n  const imageElements = list.map(renderImagesListItem).join('');\n\n  imagesList.insertAdjacentHTML('afterbegin', imageElements);\n};\n","import { fetchImages } from './js/api';\nimport { renderImagesList } from './js/ui';\n\nconst searchFormElement = document.querySelector('.search-form');\n\nsearchFormElement.addEventListener('submit', async event => {\n  event.preventDefault();\n\n  const formData = new FormData(event.target);\n  const searchQuery = formData.get('searchQuery');\n  try {\n    const resp = await fetchImages({ searchQuery });\n\n    if (!resp.hits.length) {\n      throw new Error('Sorry, there are no images matching your search query. Please try again.');\n    }\n\n    renderImagesList(resp.hits);\n  } catch (error) {\n    console.error(error);\n  }\n});\n"],"names":["BASE_URL","API_KEY","fetchImages","searchQuery","currentPage","pageSize","response","renderImagesListItem","item","renderImagesList","list","imagesList","imageElements","searchFormElement","event","resp","error"],"mappings":"ssBAAA,MAAMA,EAAW,2BACXC,EAAU,qCAEHC,EAAc,CAAC,CAC1B,YAAAC,EAAc,GACd,YAAAC,EAAc,EACd,SAAAC,EAAW,EACb,IACS,MACL,GAAGL,+CAAsDG,UAAoBC,cAAwBC,SAAgBJ,mBACzH,EAAI,KAAKK,GACDA,EAAS,GACJA,EAAS,OAGX,QAAQ,OACb,IAAI,MAAM,sCAAsCH,GAAa,CACnE,CACG,EClBGI,EAAwBC,GACnB;AAAA;AAAA,yBAEcA,EAAK;AAAA;AAAA,6BAEDA,EAAK;AAAA,6BACLA,EAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAOGA,EAAK;AAAA;AAAA;AAAA,qCAGLA,EAAK;AAAA;AAAA;AAAA,wCAGFA,EAAK;AAAA;AAAA;AAAA,yCAGJA,EAAK;AAAA;AAAA;AAAA;AAAA,QAOjCC,EAAmBC,GAAQ,CACtC,MAAMC,EAAa,SAAS,cAAc,UAAU,EAEpDA,EAAW,UAAY,GAEvB,MAAMC,EAAgBF,EAAK,IAAIH,CAAoB,EAAE,KAAK,EAAE,EAE5DI,EAAW,mBAAmB,aAAcC,CAAa,CAC3D,EClCMC,EAAoB,SAAS,cAAc,cAAc,EAE/DA,EAAkB,iBAAiB,SAAU,MAAMC,GAAS,CAC1DA,EAAM,eAAc,EAGpB,MAAMX,EADW,IAAI,SAASW,EAAM,MAAM,EACb,IAAI,aAAa,EAC9C,GAAI,CACF,MAAMC,EAAO,MAAMb,EAAY,CAAE,YAAAC,CAAa,CAAA,EAE9C,GAAI,CAACY,EAAK,KAAK,OACb,MAAM,IAAI,MAAM,0EAA0E,EAG5FN,EAAiBM,EAAK,IAAI,CAC3B,OAAQC,EAAP,CACA,QAAQ,MAAMA,CAAK,CACpB,CACH,CAAC"}